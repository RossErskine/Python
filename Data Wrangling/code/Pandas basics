#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Script Pandas basic 

"""
import numpy as np
import pandas as pd
from pandas import Series, DataFrame

# Series
obj = pd.Series([4, 7, -5, 3])
obj
obj.values
obj.index

obj2 = pd.Series([4, 7, -5, 3], index=['d', 'b', 'a', 'c'])
obj2
obj2.index

obj2[obj2 > 0]
obj2 * obj2
np.exp(obj2)
'b' in obj2

sdata = {'Ohio': 35000, ' Texas': 71000, 'Oregon': 16000, 'Utah': 5000}
obj3 = pd.Series(sdata)
obj3

states = ['California', 'Ohio', 'Oregon', 'Texas']
obj4 = pd.Series(sdata, index=states)
obj4

pd.isnull(obj4)
pd.notnull(obj4)
obj4.isnull()

obj4.name = 'population'
obj4.index.name = 'state'
obj4

obj.index = ['Bob', 'Steve', 'Jeff', 'Ryan']
obj

data = {'state': ['Ohio', 'Ohio', 'Ohio', 'Nevada', 'Nevada', 'Nevada'],
            'year': [2000, 2001, 2002, 2001, 2002, 2003], 
            'pop':[1.5, 1.7, 3.6, 2.4, 2.9,3.2]}
frame = pd.DataFrame(data)
frame

frame.head()
pd.DataFrame(data, columns=['year', 'state', 'pop'])

frame2 = pd.DataFrame(data, columns=['year', 'state', 'pop', 'debt'],
                      index=['one', 'two', 'three', 'four', 'five', 'six'])
frame2
frame2.columns
frame2['state']
frame2.year
frame2.loc['three']

frame2['debt'] = 16.5
frame2

frame2['debt'] = np.arange(6.)
frame2

val = pd.Series([-1.2, -1.5, -1.7], index=['two', 'four', 'five'])
frame2['debt']= val
frame2

frame2['eastern'] = frame2.state == 'Ohio'
frame2

del frame2['eastern']
frame2.columns

pop = {'Nevada': {2001: 2.4, 2002: 2.9}, 'Ohio': {2000: 1.5, 2001: 1.7, 2002: 3.6}}
frame3 = pd.DataFrame(pop)
frame3
frame3.T

pd.DataFrame(pop, index=[2001, 2002, 2003])
pdata = {'Ohio': frame3['Ohio'][:-1], 'Nevada': frame3['Nevada'][:2]}
pd.DataFrame(pdata)

frame3.index.name = 'year'; frame3.columns.name = 'state'
frame3

frame3.values

# Index Objects
obj = pd.Series(range(3), index=['a', 'b', 'c'])
index = obj.index
index
index[1:]

labels = pd.Index(np.arange(3))
labels

obj2.index is labels

# Essential functionality 
# Reindexing
obj = pd.Series([4.5, 7.2, -5.3, 3.6], index=['d', 'b', 'a', 'c'])
obj

obj2 = obj.reindex(['a,', 'b', 'c', 'd', 'e'])
obj2

frame = pd.DataFrame(np.arange(9).reshape((3, 3)), index=['a', 'c' ,'d'], columns=['Ohio', 'Texas', 'California'])
frame

#states = ['Texas', 'Utah', 'California']
#frame.reindex(columns=states)
#frame.loc[['a','c','d'], states]

# Dropping entries from axis
obj = pd.Series(np.arange(5.), index=['a', 'b', 'c', 'd', 'e'])
new_obj = obj.drop('c')
new_obj

# indexing, selection and filtering
obj = pd.Series(np.arange(4.), index=['a', 'b', 'c', 'd'] )
obj
obj['b']
obj[1]
obj[2:4]
obj[[1, 3]]

data = pd.DataFrame(np.arange(16).reshape((4, 4)), index=['Ohio', 'Colarado', 'Utah', 'New york'], columns=['one', 'two', 'three', ' four'])
data
data['two']

# Functions applications and mapping
frame = pd.DataFrame(np.random.randn(4, 3), columns=list('bde'), index=['Utah', 'Ohio', 'Texas', 'Oregon'])
np.abs(frame)
f = lambda x : x.max() - x.min()
frame.apply(f)

# Correlation and Covariance
# conda install pandas.datareader
import pandas_datareader.data as web
all_data = {ticker: web.get_data_yahoo(ticker)
            for ticker in ['AAPL', 'IBM', 'MSFT', 'GOOG']}
price = pd.DataFrame({ticker: data['Adj Close']
                      for ticker, data in all_data.items()})
volume = pd.DataFrame({ticker: data['Volume']
                       for ticker, data in all_data.items()})

returns = price.pct_change()
returns.tail()

returns['MSFT'].corr(returns['IBM'])
